#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
#ifndef MOENGAGEINAPPS_SWIFT_H
#define MOENGAGEINAPPS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#import <MoEngageInApps/MoEngageInApps.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MoEngageInApps",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
@class NSObject;

/// MoEngageInAppAction gives all the information about the inApp action
SWIFT_CLASS("_TtC14MoEngageInApps19MoEngageInAppAction")
@interface MoEngageInAppAction : MoEngageModelObject
/// Gives the action type Navigation/Custom Action
@property (nonatomic, readonly) MoEngageInAppActionType actionType;
/// Custom key-value pairs entered while creating the campaign for the action.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull keyValuePairs;
/// Method to create an instance of MoEngageInAppAction
/// This method is for internal purpose. Do not call it explicitly.
/// :nodoc:
/// \param actionType Gives the action type Navigation/Custom Action
///
/// \param screenName Incase the action type is Navigation then the screenName to which the navigation has to be performed
///
/// \param keyValuePairs Custom key-value pairs entered while creating the campaign for the action.
///
- (nonnull instancetype)initWithActionType:(MoEngageInAppActionType)actionType keyValuePairs:(NSDictionary<NSString *, id> * _Nonnull)keyValuePairs OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dict SWIFT_UNAVAILABLE;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURL;
@class MoEngageSDKInstance;
@class MoEngageSDKConfig;
@class NSData;

@interface MoEngageInAppAssetsManager (SWIFT_EXTENSION(MoEngageInApps))
/// Get video resource name from URL.
/// \param url The resource URL.
///
///
/// returns:
/// Resource file name.
- (NSString * _Nonnull)getInAppVideoNameFor:(NSURL * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
/// Get assets that aren’t cached and needs download.
/// \param resourceLinks The resources to be downloaded.
///
/// \param inAppType The campaign type.
///
/// \param campaignID The campaign id.
///
/// \param sdkInstance The instance of SDK.
///
///
/// returns:
/// The resources that aren’t cached.
- (NSDictionary<NSURL *, NSURL *> * _Nullable)getAssetsToBeDownloadedWithResourceLinks:(NSDictionary<NSString *, NSString *> * _Nonnull)resourceLinks withInAppType:(MoEngageInAppType)inAppType forCampaignID:(NSString * _Nonnull)campaignID forSDKInstance:(MoEngageSDKInstance * _Nonnull)sdkInstance SWIFT_WARN_UNUSED_RESULT;
/// Move resource to provided path.
/// Create path if doesn’t exist.
/// \param resource The original path.
///
/// \param newPath The new path.
///
- (BOOL)moveWithResource:(NSURL * _Nonnull)resource to:(NSURL * _Nonnull)newPath error:(NSError * _Nullable * _Nullable)error;
/// Download video assets.
/// \param resourceLinks The resources to be downloaded.
///
/// \param inAppType The campaign type.
///
/// \param campaignID The campaign id.
///
/// \param sdkInstance The instance of sdk.
///
/// \param completionBlock The block to execute after downloads.
///
- (void)downloadVideoAssetsWithResourceLinks:(NSDictionary<NSString *, NSString *> * _Nonnull)resourceLinks withInAppType:(MoEngageInAppType)inAppType forCampaignID:(NSString * _Nonnull)campaignID forSDKInstance:(MoEngageSDKInstance * _Nonnull)sdkInstance andCompletionBlock:(void (^ _Nonnull)(BOOL))completionBlock;
/// Downloads asset at provided URL.
/// \param url The asset URL.
///
/// \param sdkConfig The current SDK config.
///
/// \param completionBlock The download completion callback
/// :nodoc:
///
- (void)downloadAssetsDataForURL:(NSURL * _Nonnull)url sdkConfig:(MoEngageSDKConfig * _Nonnull)sdkConfig withCompletionHandler:(void (^ _Nonnull)(BOOL, NSData * _Nullable))completionBlock;
@end

@class NSDate;

/// MoEngageInAppCampaign gives all the information about the inApp campaign
SWIFT_CLASS("_TtC14MoEngageInApps21MoEngageInAppCampaign")
@interface MoEngageInAppCampaign : MoEngageModelObject
/// A unique Id to identify the campaign
@property (nonatomic, readonly, copy) NSString * _Nonnull campaignId;
/// Campaign name provided while creating the campaign
@property (nonatomic, readonly, copy) NSString * _Nonnull campaignName;
/// Expiry time of the campaign
@property (nonatomic, readonly, strong) NSDate * _Nonnull expiryTime;
/// Boolean flag if true then,  campaign is shown for testing purpose only.
@property (nonatomic, readonly) BOOL isDraft;
/// Additional  meta data of campaign
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull campaignContext;
/// Method to create an instance of MoEngageInAppCampaign
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     campaignId: A unique Id to identify the campaign
///   </li>
///   <li>
///     campaignName: Campaign name provided while creating the campaign
///   </li>
///   <li>
///     expiryTime: Date instance of the expiry time of the campaign
///   </li>
///   <li>
///     isDraft: isDraft is a flag which provides info if the campaign is a draft being shown for testing purpose
///   </li>
///   <li>
///     campaignContext: Dictionary containing formatted campaign id, and other campaign meta information
///     :nodoc:
///   </li>
/// </ul>
- (nonnull instancetype)initWithCampaignId:(NSString * _Nonnull)campaignId campaignName:(NSString * _Nonnull)campaignName expiryTime:(NSDate * _Nonnull)expiryTime isDraft:(BOOL)isDraft campaignContext:(NSDictionary<NSString *, id> * _Nonnull)campaignContext OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dict SWIFT_UNAVAILABLE;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class MoEngageInAppPrimaryContainerView;
@class UIViewController;

/// This class can be used for all inapp instance agnostic behaviour
SWIFT_CLASS("_TtC14MoEngageInApps33MoEngageInAppConfigurationHandler")
@interface MoEngageInAppConfigurationHandler : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MoEngageInAppConfigurationHandler * _Nonnull sharedInstance;)
+ (MoEngageInAppConfigurationHandler * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
/// Store nudgeview attached with passed view controller.
/// \param nudgeView The view to track.
///
/// \param controller The view controller nudge displayed at.
///
/// \param sdkInstance The current SDK instance.
///
- (void)trackNudgeView:(MoEngageInAppPrimaryContainerView * _Nonnull)nudgeView onController:(UIViewController * _Nonnull)controller sdkInstance:(MoEngageSDKInstance * _Nonnull)sdkInstance;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface MoEngageInAppContainer (SWIFT_EXTENSION(MoEngageInApps))
/// The height that widgets won’t occupy.
/// Gif and video widget must be resized to occupy this height.
///
/// returns:
/// The empty height.
- (CGFloat)nonScalableHeight SWIFT_WARN_UNUSED_RESULT;
@end

@class MoEngageInAppCampaignMeta;

@interface MoEngageInAppController (SWIFT_EXTENSION(MoEngageInApps))
/// Check non-instrusive inapp specific eligibility condition.
/// \param campaignMeta The campaign metadata to check.
///
/// \param inPrioratizingStage Whether check is in priority stage.
///
///
/// returns:
/// Whether campaign passes check.
- (BOOL)isNudgeCampaignEligible:(MoEngageInAppCampaignMeta * _Nonnull)campaignMeta inPrioratizingStage:(BOOL)inPrioratizingStage SWIFT_WARN_UNUSED_RESULT;
/// Perform InApp campaigns sync.
/// \param completionBlock The sync callback.
/// :nodoc:
///
- (void)syncInAppsWithCompletionBlock:(void (^ _Nonnull)(BOOL))completionBlock;
/// Gets query parameters for request.
///
/// returns:
/// URL query parameters.
/// :nodoc:
- (NSDictionary<NSString *, NSString *> * _Nonnull)getQueryStringParamsForInAppRequest SWIFT_WARN_UNUSED_RESULT;
/// Fetches inapp campaign metadata.
/// \param campaignMeta The campaign meta.
///
/// \param forPreviewFlow If for preview.
///
/// \param triggerInfoDict The trigger data.
///
/// \param completionBlock The data callback.
/// :nodoc:
///
- (void)fetchInAppRequestWithCampaignMeta:(MoEngageInAppCampaignMeta * _Nonnull)campaignMeta forPreview:(BOOL)forPreviewFlow withTriggerInfo:(NSDictionary * _Nonnull)triggerInfoDict withCompletionBlock:(void (^ _Nonnull)(BOOL, NSInteger, NSDictionary * _Nullable))completionBlock;
/// Performs inapp fetch request.
/// \param campaignID The campaign id to fetch.
///
/// \param completionBlock The fetched data callback.
/// :nodoc:
///
- (void)fetchInAppRequestWithCampaignID:(NSString * _Nonnull)campaignID withCompletionBlock:(void (^ _Nonnull)(BOOL, NSDictionary * _Nullable))completionBlock;
@end

@class MoEngageInAppRatingIcon;

/// Custom Rating Widget
/// :nodoc:
SWIFT_CLASS("_TtC14MoEngageInApps31MoEngageInAppCustomRatingWidget")
@interface MoEngageInAppCustomRatingWidget : MoEngageInAppWidget
/// List where key is position and value is <code>MoEngageRatingIcon</code>
@property (nonatomic, copy) NSDictionary<NSString *, MoEngageInAppRatingIcon *> * _Nonnull ratingIconList;
/// Initialize the Rating Icon list
/// \param payloadDict InApp Template Payload
///
/// \param andRef Custom rating reference path
///
/// \param andSDKInstance MoEngageSDK Instance
///
- (nullable instancetype)initWithPayloadDict:(NSDictionary * _Nonnull)payloadDict andRef:(NSString * _Nonnull)andRef andSDKInstance:(MoEngageSDKInstance * _Nonnull)andSDKInstance error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (null_unspecified instancetype)initWithPayloadDict:(NSDictionary * _Null_unspecified)payloadDict andRef:(NSString * _Null_unspecified)ref andSDKInstance:(MoEngageSDKInstance * _Null_unspecified)sdkInstance SWIFT_UNAVAILABLE;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// MoEngageInAppDisplaySize Utils
SWIFT_CLASS("_TtC14MoEngageInApps29MoEngageInAppDisplaySizeUtils")
@interface MoEngageInAppDisplaySizeUtils : NSObject
/// Fetch MoEngageInAppDisplaySize from its string representation
/// \param displaySizeStr Display size in string form
///
///
/// returns:
/// MoEngageInAppDisplaySize
+ (MoEngageInAppDisplaySize)getDisplaySizeFrom:(NSString * _Nonnull)displaySizeStr SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class MoEngageInAppCampaignsData;
@class MoEngageInAppStatData;

/// :nodoc:
SWIFT_CLASS("_TtC14MoEngageInApps31MoEngageInAppFileStorageHandler")
@interface MoEngageInAppFileStorageHandler : NSObject
- (void)migrateInAppsDataWithSdkInstance:(MoEngageSDKInstance * _Nonnull)sdkInstance;
- (void)saveNoNEncryptedInAppDataWithData:(MoEngageInAppCampaignsData * _Nonnull)data sdkInstance:(MoEngageSDKInstance * _Nonnull)sdkInstance;
- (MoEngageInAppCampaignsData * _Nonnull)fetchInAppDataWithSdkInstance:(MoEngageSDKInstance * _Nonnull)sdkInstance SWIFT_WARN_UNUSED_RESULT;
- (void)saveInAppDataWithData:(MoEngageInAppCampaignsData * _Nonnull)data sdkInstance:(MoEngageSDKInstance * _Nonnull)sdkInstance;
- (void)migrateInAppStatDataWithSdkInstance:(MoEngageSDKInstance * _Nonnull)sdkInstance;
- (MoEngageInAppStatData * _Nonnull)fetchInAppStatDataWithSdkInstance:(MoEngageSDKInstance * _Nonnull)sdkInstance SWIFT_WARN_UNUSED_RESULT;
- (void)saveInAppStatDataWithData:(MoEngageInAppStatData * _Nonnull)data sdkInstance:(MoEngageSDKInstance * _Nonnull)sdkInstance;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIView;

/// The data source for focus manipulation.
/// :nodoc:
SWIFT_PROTOCOL("_TtP14MoEngageInApps28MoEngageInAppFocusDataSource_")
@protocol MoEngageInAppFocusDataSource
/// The first view that receives focus when InApp appears.
/// If not set, system handles the first focused view.
@property (nonatomic, weak) UIView * _Nullable primaryFocusView;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MoEngageInApps22MoEngageInAppMigration")
@interface MoEngageInAppMigration : NSObject
+ (void)migrateDataFromPreviousVersionsWithSdkInstance:(MoEngageSDKInstance * _Nonnull)sdkInstance;
+ (void)migrateDataFromNoNEncryptionToEncryptionWithSdkInstance:(MoEngageSDKInstance * _Nonnull)sdkInstance currentSDKInstance:(MoEngageSDKInstance * _Nonnull)currentSDKInstance;
+ (void)removeEncryptedFolderWithSdkInstance:(MoEngageSDKInstance * _Nonnull)sdkInstance;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class MoEngageAccountMeta;
@class MoEngageInAppNavigationAction;
@class MoEngageInAppSelfHandledCampaign;

/// Confirm to this protocol to get all the InApp campaigns related callbacks
SWIFT_PROTOCOL("_TtP14MoEngageInApps27MoEngageInAppNativeDelegate_")
@protocol MoEngageInAppNativeDelegate <NSObject>
/// Callback received when an inApp Campaign is shown by the SDK
/// \param inappCampaign MoEngageInAppCampaign instance providing the info of the campaign currently being shown
///
/// \param accountMeta MoEngageAccountMeta instance providing the info of the MoEngage Account to which the campaign belongs
///
- (void)inAppShownWithCampaignInfo:(MoEngageInAppCampaign * _Nonnull)inappCampaign forAccountMeta:(MoEngageAccountMeta * _Nonnull)accountMeta;
/// Callback received when a inApp is clicked by the user to perform a navigation action
/// \param inappCampaign MoEngageInAppCampaign instance providing the info of the campaign which is clicked by the user
///
/// \param navigationAction MoEngageInAppAction instance giving navigation action info along with key-value pairs provided while creating the campaign
///
/// \param accountMeta MoEngageAccountMeta instance providing the info of the MoEngage Account to which the campaign belongs
///
- (void)inAppClickedWithCampaignInfo:(MoEngageInAppCampaign * _Nonnull)inappCampaign andNavigationActionInfo:(MoEngageInAppNavigationAction * _Nonnull)navigationAction forAccountMeta:(MoEngageAccountMeta * _Nonnull)accountMeta;
/// Callback received when an inApp Campaign is clicked by the user to perform Custom Action
/// \param inappCampaign MoEngageInAppCampaign instance providing the info of the campaign which is clicked by the user
///
/// \param customAction MoEngageInAppAction instance giving custom action info along with key-value pairs provided while creating the campaign
///
/// \param accountMeta MoEngageAccountMeta instance providing the info of the MoEngage Account to which the campaign belongs
///
- (void)inAppClickedWithCampaignInfo:(MoEngageInAppCampaign * _Nonnull)inappCampaign andCustomActionInfo:(MoEngageInAppAction * _Nonnull)customAction forAccountMeta:(MoEngageAccountMeta * _Nonnull)accountMeta;
/// Callback received when an inApp is dismissed
/// \param inappCampaign MoEngageInAppCampaign instance providing the info of the campaign which is being dismissed by the user
///
/// \param accountMeta MoEngageAccountMeta instance providing the info of the MoEngage Account to which the campaign belongs
///
- (void)inAppDismissedWithCampaignInfo:(MoEngageInAppCampaign * _Nonnull)inappCampaign forAccountMeta:(MoEngageAccountMeta * _Nonnull)accountMeta;
/// Callback received when a self handled inApp is triggered by an event
/// \param inappCampaign MoEngageInAppSelfHandledCampaign instance with self handled inApp info
///
/// \param accountMeta MoEngageAccountMeta instance providing the info of the MoEngage Account to which the campaign belongs
///
- (void)selfHandledInAppTriggeredWithInfo:(MoEngageInAppSelfHandledCampaign * _Nonnull)inappCampaign forAccountMeta:(MoEngageAccountMeta * _Nonnull)accountMeta;
@end

enum MoEngageNavigationType : NSInteger;

/// Model describing the navigation action for inapp
SWIFT_CLASS("_TtC14MoEngageInApps29MoEngageInAppNavigationAction")
@interface MoEngageInAppNavigationAction : MoEngageInAppAction
/// Navigation Type
@property (nonatomic, readonly) enum MoEngageNavigationType navigationType;
/// Url/Screen-name to which the user should be navigated.
@property (nonatomic, readonly, copy) NSString * _Nullable navigationUrl;
/// :nodoc
- (nonnull instancetype)initWithNavigationType:(enum MoEngageNavigationType)navigationType actionType:(MoEngageInAppActionType)actionType navigationUrl:(NSString * _Nullable)navigationUrl keyValuePairs:(NSDictionary<NSString *, id> * _Nonnull)keyValuePairs OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithActionType:(MoEngageInAppActionType)actionType keyValuePairs:(NSDictionary<NSString *, id> * _Nonnull)keyValuePairs SWIFT_UNAVAILABLE;
@end

@protocol MoEngageInAppWidgetResizingCallbackListnerDelegate;

/// The delegate that handles fullscreen resize.
SWIFT_PROTOCOL("_TtP14MoEngageInApps35MoEngageInAppWidgetResizingDelegate_")
@protocol MoEngageInAppWidgetResizingDelegate <NSObject>
/// The container widget width.
@property (nonatomic, readonly) CGFloat originalWidth;
/// The curret display size.
@property (nonatomic, readonly) MoEngageInAppDisplaySize currentDisplaySize;
/// Add resize callback listner.
/// \param listner The listner to add.
///
- (void)addListner:(id <MoEngageInAppWidgetResizingCallbackListnerDelegate> _Nonnull)listner;
/// Switch to/from fullscreen.
- (void)toggleFullscreen;
@end


@interface MoEngageInAppPrimaryContainerView (SWIFT_EXTENSION(MoEngageInApps)) <MoEngageInAppWidgetResizingDelegate>
/// The container widget width.
@property (nonatomic, readonly) CGFloat originalWidth;
/// The curret display size.
@property (nonatomic, readonly) MoEngageInAppDisplaySize currentDisplaySize;
/// Add resize callback listner.
/// \param listner The listner to add.
///
- (void)addListner:(id <MoEngageInAppWidgetResizingCallbackListnerDelegate> _Nonnull)listner;
/// Switch to/from fullscreen.
/// \param animated Whether animation will be applied.
///
- (void)toggleFullscreenWithAnimated:(BOOL)animated;
/// Switch to/from fullscreen.
- (void)toggleFullscreen;
/// Set container display size.
- (void)setDisplaySize;
@end

@class NSNumber;
@class MoEngageInAppRatingIconState;

/// Rating Icon
/// :nodoc:
SWIFT_CLASS("_TtC14MoEngageInApps23MoEngageInAppRatingIcon")
@interface MoEngageInAppRatingIcon : NSObject
/// Value associated with the  RatingIcon. Not used in current flow
@property (nonatomic, strong) NSNumber * _Nullable value;
/// Description associated with the  RatingIcon
@property (nonatomic, copy) NSString * _Nullable ratingDescription;
/// associated with the RatingIcon selected state
@property (nonatomic, strong) MoEngageInAppRatingIconState * _Nullable selectedState;
/// associated with the RatingIcon unselected state
@property (nonatomic, strong) MoEngageInAppRatingIconState * _Nullable unselectedState;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class MoEngageInAppWidgetStyle;

/// Rating Icon State
/// :nodoc:
SWIFT_CLASS("_TtC14MoEngageInApps28MoEngageInAppRatingIconState")
@interface MoEngageInAppRatingIconState : NSObject
/// Style of the Rating Icon
@property (nonatomic, strong) MoEngageInAppWidgetStyle * _Nullable style;
/// not used now
@property (nonatomic, copy) NSString * _Nullable icon;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Custom Rating Type
/// :nodoc:
typedef SWIFT_ENUM(NSInteger, MoEngageInAppRatingType, open) {
  MoEngageInAppRatingTypeStar = 0,
  MoEngageInAppRatingTypeNone = 1,
};


/// Custom Rating Type Utils
/// :nodoc:
SWIFT_CLASS("_TtC14MoEngageInApps28MoEngageInAppRatingTypeUtils")
@interface MoEngageInAppRatingTypeUtils : NSObject
/// Fetch rating type from its string value
/// \param ratingTypeStr rating typ
///
///
/// returns:
/// MoEngageInAppRatingType
+ (enum MoEngageInAppRatingType)getInAppRatingTypeFrom:(NSString * _Nonnull)ratingTypeStr SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// InApp resolution that preview was tested on.
/// :nodoc:
SWIFT_CLASS("_TtC14MoEngageInApps23MoEngageInAppResolution")
@interface MoEngageInAppResolution : NSObject
/// Resolution height.
@property (nonatomic, readonly) float height;
/// Resolution width.
@property (nonatomic, readonly) float width;
/// Create a new resolution object.
/// \param payload The resolution payload.
///
/// \param sdkInstance The instance of SDK for campaign.
///
- (nullable instancetype)initWithPayload:(NSDictionary * _Nullable)payload sdkInstance:(MoEngageSDKInstance * _Nonnull)sdkInstance OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// MoEngageInAppSelfHandledCampaign gives all the information required for a self-handled inApp campaign
SWIFT_CLASS("_TtC14MoEngageInApps32MoEngageInAppSelfHandledCampaign")
@interface MoEngageInAppSelfHandledCampaign : MoEngageInAppCampaign
/// Self handled campaign payload.
@property (nonatomic, readonly, copy) NSString * _Nonnull campaignContent;
/// Interval after which in-app should be dismissed, unit - Seconds. By default the value will be -1.
@property (nonatomic, readonly) NSInteger autoDismissInterval;
/// :nodoc:
- (nonnull instancetype)initWithCampaignContent:(NSString * _Nonnull)campaignContent autoDismissInterval:(NSInteger)autoDismissInterval campaign_id:(NSString * _Nonnull)campaign_id campaign_name:(NSString * _Nonnull)campaign_name expiry_time:(NSDate * _Nonnull)expiry_time isDraft:(BOOL)isDraft campaignContext:(NSDictionary<NSString *, id> * _Nonnull)campaignContext OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCampaignId:(NSString * _Nonnull)campaignId campaignName:(NSString * _Nonnull)campaignName expiryTime:(NSDate * _Nonnull)expiryTime isDraft:(BOOL)isDraft campaignContext:(NSDictionary<NSString *, id> * _Nonnull)campaignContext SWIFT_UNAVAILABLE;
@end

@class MoEngageInAppBatchData;

@interface MoEngageInAppStatsManager (SWIFT_EXTENSION(MoEngageInApps))
/// Syncs stats data.
/// \param shouldSendJWT Whether to add JWT token.
///
/// \param batchData The batch data to sync.
///
/// \param completion The sync callback.
/// :nodoc:
///
- (void)syncBatchWithShouldSendJWT:(BOOL)shouldSendJWT batchData:(MoEngageInAppBatchData * _Nonnull)batchData WithCompletion:(void (^ _Nonnull)(BOOL))completion;
/// Gets query parameters for request.
///
/// returns:
/// URL query parametes.
/// :nodoc:
- (NSDictionary<NSString *, NSString *> * _Nonnull)getQueryStringParamsForInAppRequest SWIFT_WARN_UNUSED_RESULT;
@end


/// The utility class for parsing <code>MoEngageInAppTemplateAlignment</code>.
/// :nodoc:
SWIFT_CLASS("_TtC14MoEngageInApps34MoEngageInAppTemplateAlignmentUtil")
@interface MoEngageInAppTemplateAlignmentUtil : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Get template alignment from string value.
/// \param strValue The string value to parse.
///
///
/// returns:
/// The InApp secondary container alignment.
+ (MoEngageInAppTemplateAlignment)getTemplateAlignmentFromStringValue:(NSString * _Nonnull)strValue SWIFT_WARN_UNUSED_RESULT;
/// Get the string value for InApp secondary container alignment.
/// \param alignment The InApp secondary container alignment.
///
///
/// returns:
/// The string value for alignment.
+ (NSString * _Nullable)getStringValueFor:(MoEngageInAppTemplateAlignment)alignment SWIFT_WARN_UNUSED_RESULT;
@end


@interface MoEngageInAppUtils (SWIFT_EXTENSION(MoEngageInApps))
+ (NSString * _Nonnull)getStringRepresentationFor:(MoEngageInAppSDKCampaignType)sdkCampaignType SWIFT_WARN_UNUSED_RESULT;
+ (enum MoEngageNavigationType)mapNavigationTypeFrom:(MoEngageNavActionType)type SWIFT_WARN_UNUSED_RESULT;
@end

@class NSCoder;
@class UIWindow;

/// Video widget view for inapps.
SWIFT_CLASS("_TtC14MoEngageInApps24MoEngageInAppVideoWidget")
@interface MoEngageInAppVideoWidget : UIView
/// The data for this widget.
@property (nonatomic, readonly, strong) MoEngageInAppWidget * _Nonnull widget;
/// The end position for this widget.
@property (nonatomic, readonly) CGPoint endPosition;
/// The delegate that handles fullscreen resize.
@property (nonatomic, weak) id <MoEngageInAppWidgetResizingDelegate> _Nullable resizeDelegate;
/// Creates and adds a new video widget view.
/// \param widget The widget data.
///
/// \param templateType The inapp template type for which wiget created.
///
/// \param viewContainer The container view.
///
/// \param startPosition The start position.
///
/// \param campaignId The current campaign id.
///
/// \param resizeDelegate The fullscreen resize delegate.
///
- (nullable instancetype)initWithInAppWidget:(MoEngageInAppWidget * _Nonnull)widget forTemplateType:(MoEngageInAppTemplateType)templateType inContainer:(UIView * _Nonnull)viewContainer withStartPosition:(CGPoint)startPosition andCampaignID:(NSString * _Nonnull)campaignId resizeDelegate:(id <MoEngageInAppWidgetResizingDelegate> _Nullable)resizeDelegate error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
/// Callback for view will change window.
/// \param newWindow The new parent window.
///
- (void)willMoveToWindow:(UIWindow * _Nullable)newWindow;
/// Callback for view added to window.
- (void)didMoveToWindow;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
/// Callback for view removed from superview.
- (void)removeFromSuperview;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// Listen to widget resize callback.
SWIFT_PROTOCOL("_TtP14MoEngageInApps50MoEngageInAppWidgetResizingCallbackListnerDelegate_")
@protocol MoEngageInAppWidgetResizingCallbackListnerDelegate
/// Handle widget resize.
/// \param displaySize The new size.
///
/// \param container The container in which reszing happened.
///
/// \param xScale The x-axis resize scale.
///
/// \param yScale The y-axis resize scale.
///
- (void)resizedTo:(MoEngageInAppDisplaySize)displaySize in:(MoEngageInAppContainer * _Nonnull)container xScale:(CGFloat)xScale yScale:(CGFloat)yScale;
@end


@interface MoEngageInAppVideoWidget (SWIFT_EXTENSION(MoEngageInApps)) <MoEngageInAppWidgetResizingCallbackListnerDelegate>
/// Handle widget resize.
/// \param displaySize The new size.
///
/// \param container The container in which reszing happened.
///
/// \param xScale The x-axis resize scale.
///
/// \param yScale The y-axis resize scale.
///
- (void)resizedTo:(MoEngageInAppDisplaySize)displaySize in:(MoEngageInAppContainer * _Nonnull)container xScale:(CGFloat)xScale yScale:(CGFloat)yScale;
@end





@class UIImage;

/// Video widget helpers.
SWIFT_CLASS("_TtC14MoEngageInApps29MoEngageInAppVideoWidgetUtils")
@interface MoEngageInAppVideoWidgetUtils : NSObject
/// The fullscreen action image.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nullable fullscreenImage;)
+ (UIImage * _Nullable)fullscreenImage SWIFT_WARN_UNUSED_RESULT;
/// The minimize action image.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nullable closeFullscreenImage;)
+ (UIImage * _Nullable)closeFullscreenImage SWIFT_WARN_UNUSED_RESULT;
/// The buttons’ height and width..
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat buttonSideLength;)
+ (CGFloat)buttonSideLength SWIFT_WARN_UNUSED_RESULT;
/// The duration after tap button is shown.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSTimeInterval buttonShowDuration;)
+ (NSTimeInterval)buttonShowDuration SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class MoEngageInAppViewPayload;

/// The data source for view calculation.
/// :nodoc:
SWIFT_PROTOCOL("_TtP14MoEngageInApps27MoEngageInAppViewDataSource_")
@protocol MoEngageInAppViewDataSource
/// The InApp payload.
@property (nonatomic, weak) MoEngageInAppViewPayload * _Nullable inAppPayload;
@end

/// InApp Widget initial Visibilty status
/// :nodoc
typedef SWIFT_ENUM(NSInteger, MoEngageInAppViewVisibility, open) {
  MoEngageInAppViewVisibilityHidden = 0,
  MoEngageInAppViewVisibilityVisible = 1,
};


/// MoEngageInAppViewVisibility Utils class
/// :nodoc:
SWIFT_CLASS("_TtC14MoEngageInApps32MoEngageInAppViewVisibilityUtils")
@interface MoEngageInAppViewVisibilityUtils : NSObject
/// Fetch MoEngageInAppViewVisibility from its string representation
/// \param visibilityStr visibility in string
///
///
/// returns:
/// MoEngageInAppViewVisibility
+ (enum MoEngageInAppViewVisibility)getViewVisibilityStatusFrom:(NSString * _Nonnull)visibilityStr SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The utility class for parsing <code>MoEngageInAppWidgetAlignment</code>.
SWIFT_CLASS("_TtC14MoEngageInApps32MoEngageInAppWidgetAlignmentUtil")
@interface MoEngageInAppWidgetAlignmentUtil : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Get widget alignment from string value.
/// \param strValue The string value to parse.
///
///
/// returns:
/// The widget alignment.
+ (MoEngageInAppWidgetAlignment)getWidgetAlignmentFromStringValue:(NSString * _Nonnull)strValue SWIFT_WARN_UNUSED_RESULT;
/// Get the string value for widget alignment.
/// \param alignment The widget alignment.
///
///
/// returns:
/// The string value for alignment.
+ (NSString * _Nullable)getStringValueFor:(MoEngageInAppWidgetAlignment)alignment SWIFT_WARN_UNUSED_RESULT;
@end




/// Navigation Type
typedef SWIFT_ENUM(NSInteger, MoEngageNavigationType, open) {
  MoEngageNavigationTypeNavigateToScreen = 0,
  MoEngageNavigationTypeDeepLink = 1,
  MoEngageNavigationTypeRichLanding = 2,
  MoEngageNavigationTypeExternalBrowser = 3,
  MoEngageNavigationTypeNone = 4,
};


/// Utility class for NudgePositons
/// :nodoc:
SWIFT_CLASS("_TtC14MoEngageInApps27MoEngageNudgePositionsUtils")
@interface MoEngageNudgePositionsUtils : NSObject
/// Fetch the MoEngageNudgePosition
/// \param position position in string
///
///
/// returns:
/// MoEngageNudgePosition
+ (MoEngageNudgePosition)getNudgePositionFrom:(NSString * _Nonnull)positionStr SWIFT_WARN_UNUSED_RESULT;
/// Fetch the MoEngageNudgeDisplayPosition.
/// \param position position in string.
///
///
/// returns:
/// MoEngageNudgeDisplayPosition.
+ (MoEngageNudgeDisplayPosition)getNudgeDisplayPositionFrom:(NSString * _Nonnull)positionStr SWIFT_WARN_UNUSED_RESULT;
/// Get the string representation of nudge position
/// \param position MoEngageNudgePosition
///
///
/// returns:
/// String value of the nudge position
+ (NSString * _Nonnull)getStringRepresentationFor:(MoEngageNudgePosition)position SWIFT_WARN_UNUSED_RESULT;
/// Get the string representation of nudge display position.
/// \param position MoEngageNudgeDisplayPosition.
///
///
/// returns:
/// String value of the nudge display position.
+ (NSString * _Nonnull)getStringRepresentationForDisplayPosition:(MoEngageNudgeDisplayPosition)position SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Class to configure to InApp
SWIFT_CLASS("_TtC14MoEngageInApps16MoEngageSDKInApp")
@interface MoEngageSDKInApp : NSObject
/// Singleton instance
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MoEngageSDKInApp * _Nonnull sharedInstance;)
+ (MoEngageSDKInApp * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Call this method to show Pop-up OR Fullscreen InApps inside the app for Default MoEngage Instance
- (void)showInApp;
/// Call this method to show Pop-up OR Fullscreen InApps inside the app.
/// \param appId MoEngage Account Identifier.
///
- (void)showInAppForAppId:(NSString * _Nullable)appId;
/// Method to show non-intrusive nudge campaign at any available position for Default MoEngage Instance.
- (void)showNudge SWIFT_AVAILABILITY(tvos,unavailable);
/// Method to show non-intrusive nudge campaign at any available position.
/// \param appId MoEngage Account Identifier.
///
- (void)showNudgeForAppId:(NSString * _Nullable)appId SWIFT_AVAILABILITY(tvos,unavailable);
/// Method to show non-intrusive nudge campaign at the specified position if available
/// for Default MoEngage Instance.
/// \param position specifies the position where the nudge has to be showed Top/Bottom.
///
- (void)showNudgeAtPosition:(MoEngageNudgePosition)position SWIFT_AVAILABILITY(tvos,unavailable);
/// Method to show non-intrusive nudge campaign at the specified position if available.
/// \param position specifies the position where the nudge has to be showed Top/Bottom.
///
/// \param appId MoEngage Account Identifier.
///
- (void)showNudgeAtPosition:(MoEngageNudgePosition)position forAppId:(NSString * _Nullable)appId SWIFT_AVAILABILITY(tvos,unavailable);
/// Method to obtain self-handled inApp Campaign for Default MoEngage Instance.
/// \param completionBlock Completion Block which provides MoEngageInAppSelfHandledCampaign* instance(campaignInfo), incase one is active and satisfies all the rule checks OR else campaignInfo will be nil.
///
- (void)getSelfHandledInAppWithCompletionBlock:(void (^ _Nonnull)(MoEngageInAppSelfHandledCampaign * _Nullable, MoEngageAccountMeta * _Nullable))completionBlock;
/// Method to obtain self-handled inApp Campaign.
/// \param appId MoEngage Account Identifier.
///
/// \param completionBlock Completion Block which provides MoEngageInAppSelfHandledCampaign* instance(campaignInfo), incase one is active and satisfies all the rule checks OR else campaignInfo will be nil.
///
- (void)getSelfHandledInAppForAppId:(NSString * _Nullable)appId completionBlock:(void (^ _Nonnull)(MoEngageInAppSelfHandledCampaign * _Nullable, MoEngageAccountMeta * _Nullable))completionBlock;
/// Method to be called if a self-handled InApp is shown inside the app for Default MoEngage Instance.
/// \param campaignInfo MoEngageInAppSelfHandledCampaign instance with the campaign info.
///
- (void)selfHandledShownWithCampaignInfo:(MoEngageInAppSelfHandledCampaign * _Nonnull)campaignInfo;
/// Method to be called if a self-handled InApp is shown inside the app.
/// \param campaignInfo MoEngageInAppSelfHandledCampaign instance with the campaign info.
///
/// \param appId MoEngage Account Identifier.
///
- (void)selfHandledShownWithCampaignInfo:(MoEngageInAppSelfHandledCampaign * _Nonnull)campaignInfo forAppId:(NSString * _Nullable)appId;
/// Method to be called if a self-handled InApp is clicked by the user for Default MoEngage Instance
/// \param campaignInfo MoEngageInAppSelfHandledCampaign instance with the campaign info.
///
- (void)selfHandledClickedWithCampaignInfo:(MoEngageInAppSelfHandledCampaign * _Nonnull)campaignInfo;
/// Method to be called if a self-handled InApp is clicked by the user
/// \param campaignInfo MoEngageInAppSelfHandledCampaign instance with the campaign info.
///
/// \param appId MoEngage Account Identifier.
///
- (void)selfHandledClickedWithCampaignInfo:(MoEngageInAppSelfHandledCampaign * _Nonnull)campaignInfo forAppId:(NSString * _Nullable)appId;
/// Method to be called if a self-handled InApp is dismissed by the user for Default MoEngage Instance
/// \param campaignInfo MoEngageInAppSelfHandledCampaign instance with the campaign info.
///
- (void)selfHandledDismissedWithCampaignInfo:(MoEngageInAppSelfHandledCampaign * _Nonnull)campaignInfo;
/// Method to be called if a self-handled InApp is dismissed by the user
/// \param campaignInfo MoEngageInAppSelfHandledCampaign instance with the campaign info.
///
/// \param appId MoEngage Account Identifier.
///
- (void)selfHandledDismissedWithCampaignInfo:(MoEngageInAppSelfHandledCampaign * _Nonnull)campaignInfo forAppId:(NSString * _Nullable)appId;
/// Method to disable inApps module for Default MoEngage Instance
- (void)disableInApps;
/// Method to disable inApps module.
/// \param appId MoEngage Account Identifier.
///
- (void)disableInAppsForAppId:(NSString * _Nullable)appId;
/// Call this method to block InApps in a particular ViewController for Default MoEngage Instance
/// \param viewController UIViewController instance where InApps have to be blocked
///
- (void)blockInAppForViewController:(UIViewController * _Nonnull)viewController;
/// Call this method to block InApps in a particular ViewController
/// \param viewController UIViewController instance where InApps have to be blocked
///
/// \param appId MoEngage Account Identifier.
///
- (void)blockInAppForViewController:(UIViewController * _Nonnull)viewController forAppId:(NSString * _Nullable)appId;
/// Method to set the current inApp contexts, so that campaign with contexts will only be shown when the current context contains the campaign context for Default MoEngage instance.
/// \param contexts Array of contexts
///
- (void)setCurrentInAppContexts:(NSArray<NSString *> * _Nonnull)contexts;
/// Method to set the current inApp contexts, so that campaign with contexts will only be shown when the current context contains the campaign context
/// \param contexts Array of contexts
///
/// \param appId MoEngage Account Identifier.
///
- (void)setCurrentInAppContexts:(NSArray<NSString *> * _Nonnull)contexts forAppId:(NSString * _Nullable)appId;
/// Call this methods to invalidate/reset the contexts set currently in the app for Default MoEngage instance.
- (void)invalidateInAppContexts;
/// Call this methods to invalidate/reset the contexts set currently in the app.
/// \param appId MoEngage Account Identifier.
///
- (void)invalidateInAppContextsForAppId:(NSString * _Nullable)appId;
/// Method to set delegate for the inApp Callbacks for Default MoEngage instance.
/// \param delegate MoEngageInAppNative Delegate which will all the callbacks
///
- (void)setInAppDelegate:(id <MoEngageInAppNativeDelegate> _Nonnull)delegate;
/// Method to set delegate for the inApp Callbacks
/// \param delegate MoEngageInAppNativeDelegate which will all the callbacks
///
/// \param appId MoEngage Account Identifier.
///
- (void)setInAppDelegate:(id <MoEngageInAppNativeDelegate> _Nonnull)delegate forAppId:(NSString * _Nullable)appId;
/// Method to reset the inApp Delegate for Default Instance for Default MoEngage instance.
- (void)resetInAppDelegate;
/// Method to reset the inApp Delegate for Default Instance
/// \param appId MoEngage Account Identifier.
///
- (void)resetInAppDelegateForAppId:(NSString * _Nullable)appId;
@end



#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
